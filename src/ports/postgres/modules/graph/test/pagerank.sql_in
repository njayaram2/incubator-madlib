/* ----------------------------------------------------------------------- *//**
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *//* ----------------------------------------------------------------------- */

DROP TABLE IF EXISTS vertex, edge, pagerank_out;
CREATE TABLE vertex(
        id INTEGER
        );
CREATE TABLE edge(
        src INTEGER,
        dest INTEGER
        );
INSERT INTO vertex VALUES
(0),
(1),
(2),
(3),
(4),
(5),
(6);
INSERT INTO edge VALUES
(0, 1),
(0, 2),
(0, 4),
(1, 2),
(1, 3),
(2, 3),
(2, 5),
(2, 6),
(3, 0),
(4, 0),
(5, 6),
(6, 3);

SELECT madlib.pagerank(
             'vertex',        -- Vertex table
             'id',            -- Vertix id column
             'edge',          -- Edge table
             'src=src, dest=dest', -- Edge args
             'pagerank_out'); -- Output table of PageRank

-- View the PageRank of all vertices, sorted by their scores.
SELECT assert(relative_error(SUM(pagerank), 1) < 0.00001,
        'PageRank: Scores do not sum up to 1.'
    ) FROM pagerank_out;
